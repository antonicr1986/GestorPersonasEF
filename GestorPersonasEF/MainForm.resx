<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAHHYAQBx2AEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAgAAAAAAAAAIAAAAEgAAABEAAAARAAAAEQAAABEAAAARAAAAEQAA
        ABEAAAARAAAAEQAAABEAAAARAAAAEQAAABIAAAAHAAAAAAAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAUQAAAOUAAADuAAAA7QAAAO4AAADuAAAA7gAA
        AO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADtAAAA8AAAANwAAABIAAAAAAAAAAcAAAASAAAAEQAA
        ABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAASAAAAEAAAABYAAADdAAAA/wAAAP0AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAOYAAABHAAAA3AAA
        APAAAADtAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADtAAAA7wAAAPwAAAD9AAAA/gAA
        AP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA+AAA
        AOYAAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAA
        AP8AAADZAAAA+AAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAA
        AP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD8AAAA/wAAAI0AAADZAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/QAAAP8AAADpAAAAHwAAAI0AAAD/AAAA/AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD9AAAA/QAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAD7AAAA/wAAAGAAAAAAAAAAHwAAAOkAAAD/AAAA/QAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/gAAAPYAAAD6AAAA/wAAAPwAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD8AAAA/AAAAP8AAAB9AAAAAAAAAAMAAAAAAAAAYAAAAP8AAAD7AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAPsAAAD/AAAAWAAAAFcAAAD7AAAA/wAA
        AP4AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAAD4AAAAZQAAAAAAAAADAAAAAAAAAAMAAAAAAAAAfgAA
        AP8AAAD8AAAA/AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPwAAAD8AAAA/wAAAHoAAAAAAAAAAAAA
        ACkAAAC8AAAA/wAAAP4AAAD/AAAA/wAAAP4AAAD/AAAAvAAAACkAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAZQAAAPkAAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAPgAAABjAAAAAAAA
        AAMAAAADAAAAAAAAAAAAAADUAAAA/wAAAP0AAAD9AAAA/wAAANIAAAAAAAAAAAAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAAAAAAAAKgAAALwAAAD/AAAA/gAAAP8AAAD/AAAA/gAAAP8AAAC8AAAAKQAA
        AAAAAAAEAAAAAAAAAAEAAAACAAAAAAAAANUAAAD/AAAA/QAAAP0AAAD/AAAA0wAAAAAAAAACAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAANQAAAD/AAAA/QAAAP0AAAD/AAAA1AAA
        AAAAAAAAAAAAAwAAAAAAAAABAAAAAAAAAAYAAACfAAAA/wAAAP4AAAD/AAAA/wAAAP4AAAD/AAAAngAA
        AAYAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAAAAAA1QAAAP8AAAD9AAAA/QAA
        AP8AAADVAAAAAAAAAAIAAAABAAAAAAAAAAMAAAAAAAAAkAAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAA
        APsAAAD/AAAAjgAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAABgAAAKAAAAD/AAAA/gAA
        AP8AAAD/AAAA/gAAAP8AAACgAAAABgAAAAAAAAABAAAAAAAAAAIAAADYAAAA/wAAAP0AAAD/AAAA/wAA
        AP8AAAD/AAAA/QAAAP8AAADWAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACQAAAA/wAA
        APsAAAD/AAAA/wAAAP8AAAD/AAAA+wAAAP8AAACQAAAAAAAAAAQAAAAAAAAADwAAAOoAAAD/AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAOgAAAAOAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAgAA
        ANgAAAD/AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA/wAAANgAAAACAAAAAAAAAAAAAAAUAAAA7wAA
        AP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAA7gAAABIAAAAAAAAAAQAAAAAAAAAAAAAAAQAA
        AAAAAAAPAAAA6gAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAA6gAAAA8AAAAAAAAAAAAA
        ABMAAADvAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADtAAAAEQAAAAAAAAABAAAAAAAA
        AAAAAAABAAAAAAAAABQAAADvAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADvAAAAFAAA
        AAAAAAAAAAAADQAAAOkAAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAOcAAAAMAAAAAAAA
        AAEAAAAAAAAAAAAAAAEAAAAAAAAAEwAAAO8AAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAA
        AO8AAAATAAAAAAAAAAEAAAAAAAAA1AAAAP8AAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP0AAAD/AAAA0gAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAANAAAA6QAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAA
        AP4AAAD/AAAA6AAAAA0AAAAAAAAABAAAAAAAAACiAAAA/wAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA+wAA
        AP8AAACgAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUAAAA/wAAAP0AAAD/AAAA/wAA
        AP8AAAD/AAAA/QAAAP8AAADTAAAAAAAAAAAAAAADAAAAAAAAAEUAAAD/AAAA+wAAAPwAAAD+AAAA/gAA
        APwAAAD7AAAA/wAAAEMAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAKIAAAD/AAAA+wAA
        AP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAKIAAAAAAAAAAwAAAAAAAAACAAAAAAAAAJIAAAD/AAAA/QAA
        AP8AAAD/AAAA/QAAAP8AAACQAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAARQAA
        AP8AAAD7AAAA/AAAAP4AAAD+AAAA/AAAAPsAAAD/AAAARQAAAAAAAAADAAAAAAAAAAAAAAABAAAAAAAA
        AGIAAADMAAAA6gAAAOoAAADMAAAAYgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAAAAAAkQAAAP8AAAD9AAAA/wAAAP8AAAD9AAAA/wAAAJEAAAAAAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAAAAAAAAAAAAOAAAADgAAAAEAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAYgAAAM0AAADrAAAA6wAAAM0AAABjAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAQAAAAAAAAAAAAAAAQAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAA0AAAANAAAAAAAAAAAAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAACAAAAAAAAAAAAAAACAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////6AAH/9L/0gAIAAS/kAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAACgAAABEAAwAkgASAikAIAJUgEQAmgAEAJkAKABZACgAWgAIAFoAGABaABgAWgAQANoAFACaAD
        QAmQAiARkAIAI4gESEvEAKMX0hLoX+jF//8=
</value>
  </data>
</root>